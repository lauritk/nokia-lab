channel_groups = {
    # Shank index.
    0:
        {
            # List of channels to keep for spike detection.
            'channels': list(range(32)),

            # Adjacency graph. Dead channels will be automatically discarded
            # by considering the corresponding subgraph.
			
            'graph': [
                (0, 1), (0, 2),
                (1, 2), (1, 3),
                (2, 3), (2, 4),
                (3, 4), (3, 5),
                (4, 5), (4, 6),
                (5, 6), (5, 7),
                (6, 7), 
				(8, 9), (8, 10),
                (9, 10), (9, 11),
				(10, 11), (10, 12),
                (8, 9), (8, 10),
                (9, 10), (9, 11),
                (10, 11), (10, 12),
                (11, 12), (11, 13),
                (12, 13), (12, 14),
                (13, 14), (13, 15),
                (14, 15), 
                (16, 17), (16, 18),
                (17, 18), (17, 19),
                (18, 19), (18, 20),
                (19, 20), (19, 21),
                (20, 21), (20, 22),
                (21, 22), (21, 23),
                (22, 23), 
                (24, 25), (24, 26),
                (25, 26), (25, 27),
                (26, 27), (26, 28),
                (27, 28), (27, 29),
                (28, 29), (28, 30),
                (29, 30), (29, 31),
                (30, 31),
            ],

            # 2D positions of the channels, only for visualization purposes
            # in KlustaViewa. The unit doesn't matter.
	  'geometry': {
	  				0: (-70, -0),
	  				1: (-70, -10),
	  				2: (-70, -20),
	  				3: (-70, -30),
	  				4: (-70, -40),
	  				5: (-70, -50),
	  				6: (-70, -60),
	  				7: (-70, -70),
	  				8: (-35, 0),
	  				9: (-35, -10),
	  				10: (-35, -20),
	  				11: (-35, -30),
	  				12: (-35, -40),
	  				13: (-35, -50),
	  				14: (-35, -60),
	  				15: (-35, -70),
	  				16: (0, 0),
	  				17: (0, -10),
	  				18: (0, -20),
	  				19: (0, -30),
	  				20: (0, -40),
	  				21: (0, -50),
	  				22: (0, -60),
	  				23: (0, -70),
	  				24: (35, 0),
	  				25: (35, -10),
	  				26: (35, -20),
	  				27: (35, -30),
	  				28: (35, -40),
	  				29: (35, -50),
	  				30: (35, -60),
	  				31: (35, -70),
	  			}
    }
}
